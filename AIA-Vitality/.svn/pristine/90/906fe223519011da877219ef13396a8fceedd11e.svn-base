<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <!-- 
  Context Configuration locations for Spring XML files 
  -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
		classpath:spring/*.xml
	</param-value>
  </context-param>
  
  <!-- 
  log4j config location 
  -->
  <context-param>
	<param-name>log4jConfigLocation</param-name>
	<param-value>
		classpath:log4j.xml
	</param-value>
  </context-param>
  
  <!-- 
  log4j config file refresh interval, used by Log4jConfigListener
  -->
  <context-param>
	<param-name>log4jRefreshInterval</param-name>
	<param-value>60000</param-value>
  </context-param>
  
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- 
  An ETag (entity tag) is an HTTP response header returned by an HTTP/1.1 compliant web server used 
  to determine change in content at a given URL. It can be considered to be the more sophisticated successor 
  to the Last-Modified header. When a server returns a representation with an ETag header, 
  the client can use this header in subsequent GETs, in an If-None-Match header. 
  If the content has not changed, the server returns 304: Not Modified.
  -->
  <filter>
	<filter-name>etagFilter</filter-name>
    <filter-class>org.springframework.web.filter.ShallowEtagHeaderFilter</filter-class>
  </filter>

  <filter-mapping>
  	<filter-name>etagFilter</filter-name>
  	<servlet-name>/*</servlet-name>
  </filter-mapping>
  
  <!--
	- Loads the root application context of this web app at startup.
	- The application context is then available via
	- WebApplicationContextUtils.getWebApplicationContext(servletContext).
  -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!--
	- Publishes events for session creation and destruction through the application
	- context. Optional unless concurrent session control is being used.
  -->
  <listener>
    <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
  </listener>
  
  <listener>
	<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  
  <servlet>
    <servlet-name>rest</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value></param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>rest</servlet-name>
    <url-pattern>/service/*</url-pattern>
  </servlet-mapping>
  
 
  <!-- 
  Session Time Out if no activity in last 1 month=43220 mins. 
  -->
  <session-config>
	<session-timeout>43200</session-timeout>
  </session-config>
  
  <!-- 
  The error codes and the corresponding pages
  -->
  <error-page>
    <error-code>404</error-code>
    <location>/error</location>
  </error-page>
  
  <error-page>
    <error-code>400</error-code>
    <location>/error</location>
  </error-page>
  
  <error-page>
    <exception-type>java.lang.Throwable</exception-type>
    <location>/error</location>
  </error-page>
  
  
  <welcome-file-list>  
	 <welcome-file>index.jsp</welcome-file>  
  </welcome-file-list>  
  
</web-app>
